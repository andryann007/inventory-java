package code;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Andryan
 */
public final class formKeluar extends javax.swing.JPanel {

    clsKeluar objKeluar = new clsKeluar();
    
    public formKeluar() {
        initComponents();
        isiTabel();
        isiComboBarang();
        isiComboCustomer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHeader = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        panelBody = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelBarangKeluar = new javax.swing.JTable();
        labelIdKeluar = new javax.swing.JLabel();
        txtIdKeluar = new javax.swing.JTextField();
        labelBarang = new javax.swing.JLabel();
        labelCustomer = new javax.swing.JLabel();
        txtHargaSatuanKeluar = new javax.swing.JTextField();
        labelKeluar = new javax.swing.JLabel();
        txtQTYKeluar = new javax.swing.JTextField();
        cboBarangKeluar = new javax.swing.JComboBox<>();
        labelHarga = new javax.swing.JLabel();
        txtKeteranganKeluar = new javax.swing.JTextField();
        labelKeterangan = new javax.swing.JLabel();
        labelQTY = new javax.swing.JLabel();
        dateKeluar = new com.toedter.calendar.JDateChooser();
        cboCustomer = new javax.swing.JComboBox<>();
        panelFooter = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(750, 670));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelHeader.setBackground(new java.awt.Color(255, 255, 255));

        labelTitle.setFont(new java.awt.Font("Century", 1, 24)); // NOI18N
        labelTitle.setText("Data Barang Keluar");

        javax.swing.GroupLayout panelHeaderLayout = new javax.swing.GroupLayout(panelHeader);
        panelHeader.setLayout(panelHeaderLayout);
        panelHeaderLayout.setHorizontalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(labelTitle)
                .addContainerGap(253, Short.MAX_VALUE))
        );
        panelHeaderLayout.setVerticalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHeaderLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(labelTitle)
                .addGap(32, 32, 32))
        );

        add(panelHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(738, 250));

        tabelBarangKeluar.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        tabelBarangKeluar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Keluar", "Tanggal Keluar", "Nama Barang", "Nama Customer", "Harga Satuan", "QTY Keluar", "Total Harga", "Keterangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelBarangKeluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBarangKeluarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelBarangKeluar);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(191, 191, 191))
        );

        labelIdKeluar.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        labelIdKeluar.setText("ID Keluar :");

        txtIdKeluar.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        txtIdKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeluarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeluarKeyTyped(evt);
            }
        });

        labelBarang.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        labelBarang.setText("Nama Barang :");

        labelCustomer.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        labelCustomer.setText("Nama Customer :");

        txtHargaSatuanKeluar.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        txtHargaSatuanKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHargaSatuanKeluarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHargaSatuanKeluarKeyTyped(evt);
            }
        });

        labelKeluar.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        labelKeluar.setText("Tanggal Keluar :");

        txtQTYKeluar.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        txtQTYKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQTYKeluarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQTYKeluarKeyTyped(evt);
            }
        });

        cboBarangKeluar.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        cboBarangKeluar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboBarangKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBarangKeluarActionPerformed(evt);
            }
        });

        labelHarga.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        labelHarga.setText("Harga / Pcs :");

        txtKeteranganKeluar.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N

        labelKeterangan.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        labelKeterangan.setText("Keterangan :");

        labelQTY.setFont(new java.awt.Font("Century", 1, 12)); // NOI18N
        labelQTY.setText("QTY Keluar  :");

        dateKeluar.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N

        cboCustomer.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        cboCustomer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panelBodyLayout = new javax.swing.GroupLayout(panelBody);
        panelBody.setLayout(panelBodyLayout);
        panelBodyLayout.setHorizontalGroup(
            panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBodyLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelBarang)
                            .addComponent(labelHarga))
                        .addGap(18, 18, 18)
                        .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHargaSatuanKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboBarangKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(labelIdKeluar)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCustomer, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelQTY, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelKeluar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtQTYKeluar, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(dateKeluar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboCustomer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelKeterangan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtKeteranganKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );
        panelBodyLayout.setVerticalGroup(
            panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelIdKeluar)
                        .addComponent(txtIdKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelKeluar))
                    .addComponent(dateKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboBarangKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelBarang))
                    .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelCustomer)))
                .addGap(23, 23, 23)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHargaSatuanKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHarga)
                    .addComponent(labelQTY)
                    .addComponent(txtQTYKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKeteranganKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelKeterangan))
                .addGap(20, 20, 20))
        );

        add(panelBody, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 750, 440));

        panelFooter.setBackground(new java.awt.Color(255, 255, 255));

        btnDelete.setBackground(new java.awt.Color(255, 102, 51));
        btnDelete.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/trash-solid.png"))); // NOI18N
        btnDelete.setText(" DELETE");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(102, 255, 102));
        btnAdd.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus-solid.png"))); // NOI18N
        btnAdd.setText(" ADD");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 255, 153));
        btnEdit.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pen-to-square-solid.png"))); // NOI18N
        btnEdit.setText(" EDIT");
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFooterLayout = new javax.swing.GroupLayout(panelFooter);
        panelFooter.setLayout(panelFooterLayout);
        panelFooterLayout.setHorizontalGroup(
            panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFooterLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        panelFooterLayout.setVerticalGroup(
            panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        add(panelFooter, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 750, 130));
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeluarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if(((txtIdKeluar.getText().isEmpty())))
            {
                JOptionPane.showMessageDialog(this, "ID Keluar Tidak Boleh Kosong !!!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                txtIdKeluar.requestFocus();
            }
            else
            {
            } 
        }
    }//GEN-LAST:event_txtIdKeluarKeyPressed

    private void txtIdKeluarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeluarKeyTyped

    }//GEN-LAST:event_txtIdKeluarKeyTyped

    private void txtHargaSatuanKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHargaSatuanKeluarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaSatuanKeluarKeyPressed

    private void txtHargaSatuanKeluarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHargaSatuanKeluarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaSatuanKeluarKeyTyped

    private void txtQTYKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQTYKeluarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQTYKeluarKeyPressed

    private void txtQTYKeluarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQTYKeluarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQTYKeluarKeyTyped

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        objKeluar.Access();
        
        try{
            Statement state = objKeluar.conn.createStatement();
            objKeluar.conn.setAutoCommit(false);
            
            objKeluar.idKeluar = txtIdKeluar.getText();
            
            Object keyBarang = cboBarangKeluar.getSelectedItem();
            String valueBarang = ((clsComboBarang)keyBarang).getValue();
            objKeluar.idBarang = valueBarang;
            
            String SQL = "SELECT qty_stock, qty_keluar FROM `data_stock` s, `data_barang_keluar` k "
                    + "WHERE s.id_barang = '" + objKeluar.idBarang + "'"
                    + "AND id_keluar = '" + objKeluar.idKeluar + "'";
            ResultSet result = state.executeQuery(SQL);
            
            if(result.next()){
                String SQL2 = "DELETE FROM data_barang_keluar WHERE id_keluar = '" + objKeluar.idKeluar + "'";
                state.addBatch(SQL2);
                
                String mQtyStock = result.getString("qty_stock");
                int qty_stock_lama = Integer.parseInt(mQtyStock);
                 
                String mQtyOutcoming = result.getString("qty_keluar");
                int qty_keluar = Integer.parseInt(mQtyOutcoming);
                
                if(qty_stock_lama > qty_keluar){
                    int qty_stock_baru = qty_stock_lama + qty_keluar;
                    
                    if(qty_stock_baru > 0){
                        String SQL3 = "UPDATE data_stock SET qty_stock = '" + qty_stock_baru + "' WHERE id_barang = '" + objKeluar.idBarang +"'";
                        state.addBatch(SQL3);
                        
                        try {
                            int[] count = state.executeBatch();
                            objKeluar.conn.commit();
                            objKeluar.conn.close();
                        }
                        catch (SQLException ex) {
                            Logger.getLogger(formKeluar.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(null, ex.getMessage());
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Error, qty_stock harus lebih besar dari qty_keluar !!!");
                }
            }
            cleanData();
            isiTabel();
        
            JOptionPane.showMessageDialog(null, "Data " + objKeluar.idKeluar + " berhasil dihapus");
        }
        catch(HeadlessException e){
            JOptionPane.showMessageDialog(null, "Proses penghapusan data gagal");
            System.out.println(e.getMessage());
        } catch (SQLException ex) {
            Logger.getLogger(formKeluar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        objKeluar.Access();
        
        if(txtIdKeluar.getText().equals(""))
        {
            JOptionPane.showMessageDialog( null, "ID Keluar Tidak Boleh Kosong!!!");
        }
        else {
            try{
                Statement state = objKeluar.conn.createStatement();
                objKeluar.conn.setAutoCommit(false);
                
                objKeluar.idKeluar = txtIdKeluar.getText();
            
                SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
                objKeluar.tglKeluar = date.format(dateKeluar.getDate());
                
                Object keyBarang = cboBarangKeluar.getSelectedItem();
                String valueBarang = ((clsComboBarang)keyBarang).getValue();
                objKeluar.idBarang = valueBarang;
                
                Object keyCustomer = cboCustomer.getSelectedItem();
                String valueCustomer = ((clsComboCustomer)keyCustomer).getValue();
                objKeluar.idCustomer = valueCustomer;
            
                String mHargaSatuan = txtHargaSatuanKeluar.getText();
                objKeluar.hargaSatuan = Float.parseFloat(mHargaSatuan);
                
                String mQty = txtQTYKeluar.getText();
                objKeluar.qty = Integer.parseInt(mQty);
                
                float totalHarga = objKeluar.qty * objKeluar.hargaSatuan;
                objKeluar.totalHarga = totalHarga;
            
                objKeluar.keterangan = txtKeteranganKeluar.getText();
                
                String SQL = "SELECT qty_stock, qty_keluar FROM `data_stock` s, `data_barang_keluar` k "
                        + "WHERE s.id_barang = '" + objKeluar.idBarang + "'";
                ResultSet result = state.executeQuery(SQL);
                
                if(result.next()){
                    String SQL2 = "INSERT INTO data_barang_keluar VALUE ('" + objKeluar.idKeluar + "', '" + objKeluar.idBarang
                                + "', '" + objKeluar.idCustomer + "', '" + objKeluar.tglKeluar + "', '" + objKeluar.qty + "', '"
                                + objKeluar.hargaSatuan + "', '" + objKeluar.totalHarga + "', '" + objKeluar.keterangan + "')";
                    state.addBatch(SQL2);
                
                    String mQtyStock = result.getString("qty_stock");
                    int qty_stock = Integer.parseInt(mQtyStock);
                    qty_stock = qty_stock - objKeluar.qty; 
                    
                    String SQL3 = "UPDATE data_stock SET qty_stock = '" + qty_stock + "' WHERE id_barang = '" + objKeluar.idBarang + "'";
                    state.addBatch(SQL3);
                    
                    try {
                        int[] count = state.executeBatch();
                        objKeluar.conn.commit();
                        objKeluar.conn.close();
                    }
                    catch (SQLException ex) {
                        Logger.getLogger(formMasuk.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                    cleanData();
                    isiTabel();
                }
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
            } 
            catch(HeadlessException | NumberFormatException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            } catch (SQLException ex) {
                Logger.getLogger(formMasuk.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        objKeluar.Access();
        
        try{
            Statement state = objKeluar.conn.createStatement();
            objKeluar.conn.setAutoCommit(false);
            
            objKeluar.idKeluar = txtIdKeluar.getText();
            
            SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
            objKeluar.tglKeluar = date.format(dateKeluar.getDate());
            
            Object keyBarang = cboBarangKeluar.getSelectedItem();
            String valueBarang = ((clsComboBarang)keyBarang).getValue();
            objKeluar.idBarang = valueBarang;
                
            Object keyCustomer = cboCustomer.getSelectedItem();
            String valueCustomer = ((clsComboCustomer)keyCustomer).getValue();
            objKeluar.idCustomer = valueCustomer;
            
            String mHargaSatuan = txtHargaSatuanKeluar.getText();
            objKeluar.hargaSatuan = Float.parseFloat(mHargaSatuan);
                
            String mQty = txtQTYKeluar.getText();
            objKeluar.qty = Integer.parseInt(mQty);
                
            float totalHarga = objKeluar.qty * objKeluar.hargaSatuan;
            objKeluar.totalHarga = totalHarga;
            
            objKeluar.keterangan = txtKeteranganKeluar.getText();
        
            String SQL = "SELECT qty_stock, qty_keluar FROM `data_stock` s, `data_barang_keluar` k "
                    + "WHERE s.id_barang = '" + objKeluar.idBarang + "' "
                    + "AND id_keluar = '" + objKeluar.idKeluar + "'";
            ResultSet result = state.executeQuery(SQL);
            
            if(result.next()){
                String mQtyStock = result.getString("qty_stock");
                int qty_stock = Integer.parseInt(mQtyStock);
                    
                String mQtyOutcomingLama = result.getString("qty_keluar");
                int qty_keluar_lama = Integer.parseInt(mQtyOutcomingLama);
                    
                int qty_stock_baru = qty_stock + qty_keluar_lama - objKeluar.qty;
                    
                String SQL2 = "UPDATE data_stock SET qty_stock = '" + qty_stock_baru + "' WHERE id_barang = '" + objKeluar.idBarang + "'";
                state.addBatch(SQL2);
                
                String SQL3 = "UPDATE data_barang_keluar SET id_barang = '"
                    + objKeluar.idBarang + "', id_customer = '" + objKeluar.idCustomer 
                    + "', tgl_keluar = '" + objKeluar.tglKeluar + "', qty_keluar = '" + objKeluar.qty
                    + "', harga_satuan = '" + objKeluar.hargaSatuan + "', total_harga = '" + objKeluar.totalHarga
                    + "', keterangan = '" + objKeluar.keterangan + "' WHERE id_keluar = '" + objKeluar.idKeluar + "'";
                state.addBatch(SQL3);
                
                try {
                    int[] count = state.executeBatch();
                    objKeluar.conn.commit();
                    objKeluar.conn.close();
                }
                catch (SQLException ex) {
                    Logger.getLogger(formKeluar.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
                cleanData();
                isiTabel();
            }
            JOptionPane.showMessageDialog(null, "Data berhasil diupdate");
        } catch(HeadlessException | NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Proses pengeditan gagal");
            System.out.println(e.getMessage());
        } catch (SQLException ex) {
            Logger.getLogger(formKeluar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void cboBarangKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBarangKeluarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboBarangKeluarActionPerformed

    private void tabelBarangKeluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBarangKeluarMouseClicked
        int baris = tabelBarangKeluar.getSelectedRow();
        String id = tabelBarangKeluar.getValueAt(baris, 0).toString();
        String tglKeluar = tabelBarangKeluar.getValueAt(baris, 1).toString();
        String namaBarang = tabelBarangKeluar.getValueAt(baris, 2).toString();
        String namaCustomer = tabelBarangKeluar.getValueAt(baris, 3).toString();
        String harga = tabelBarangKeluar.getValueAt(baris, 4).toString();
        String qty = tabelBarangKeluar.getValueAt(baris, 5).toString();
        String keterangan = tabelBarangKeluar.getValueAt(baris, 7).toString();
        
        txtIdKeluar.setText(id);
        txtHargaSatuanKeluar.setText(harga);
        txtQTYKeluar.setText(qty);
        txtKeteranganKeluar.setText(keterangan);
        cboBarangKeluar.setSelectedItem(namaBarang);
        cboCustomer.setSelectedItem(namaCustomer);
        
        SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
        try {
            dateKeluar.setDate(date.parse(tglKeluar));
        } catch (ParseException ex) {
            Logger.getLogger(formKeluar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelBarangKeluarMouseClicked
    
    public void isiComboCustomer() {
        try{
            cboCustomer.removeAllItems();
            objKeluar.Access();
            String sql = "SELECT `id_customer`, `nama_customer` FROM data_customer";
            Statement state = objKeluar.conn.createStatement();
            ResultSet result = state.executeQuery(sql);
            
            DefaultComboBoxModel model = new DefaultComboBoxModel();
        
            while(result.next())
            {
                model.addElement(new clsComboCustomer(result.getString(2), result.getString(1)));
            }
            cboCustomer.setModel(model);
        }
        catch(SQLException e){
            System.out.println(e);
        }
    }
    
    public void isiComboBarang(){
        try{
            cboBarangKeluar.removeAllItems();
            objKeluar.Access();
            String sql = "SELECT `id_barang`, `nama_barang` FROM data_stock";
            Statement state = objKeluar.conn.createStatement();
            ResultSet result = state.executeQuery(sql);
            
            DefaultComboBoxModel model = new DefaultComboBoxModel();
        
            while(result.next())
            {
                model.addElement(new clsComboBarang(result.getString(2), result.getString(1)));
            }
            cboBarangKeluar.setModel(model);
        }
        catch(SQLException e){
            System.out.println(e);
        }
    }
    
    public void isiTabel(){
        DefaultTableModel tabelDataAkun = new DefaultTableModel();
        
        tabelDataAkun.addColumn("ID Keluar");
        tabelDataAkun.addColumn("Tanggal Keluar");
        tabelDataAkun.addColumn("Nama Barang");
        tabelDataAkun.addColumn("Nama Customer");
        tabelDataAkun.addColumn("Harga Satuan");
        tabelDataAkun.addColumn("QTY Keluar");
        tabelDataAkun.addColumn("Total Harga");
        tabelDataAkun.addColumn("Keterangan");
        
        try{
            objKeluar.Access();
            objKeluar.getOutcomingData();
            
            String sql = "SELECT id_keluar, nama_barang, nama_customer, tgl_keluar,"
                    + " k.harga_satuan, qty_keluar, k.total_harga, keterangan FROM `data_barang_keluar` k,"
                    + " `data_customer` cs, `data_stock` s WHERE cs.id_customer = k.id_customer AND s.id_barang = k.id_barang";
            Statement state = objKeluar.conn.createStatement();
            ResultSet result = state.executeQuery(sql);
            
            while(result.next()){
                tabelDataAkun.addRow(new Object[] {result.getString(1),
                    result.getString(4), result.getString(2),
                    result.getString(3), result.getString(5),
                    result.getString(6), result.getString(7),
                    result.getString(8)});
            }
            tabelBarangKeluar.setModel(tabelDataAkun);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Terjadi kesalahan pada penampilan data !!!");
            System.out.println(e.getMessage());
        }
    }
    
    public void cleanData()
    {
        txtIdKeluar.setText("");
        txtHargaSatuanKeluar.setText("");
        txtQTYKeluar.setText("");
        txtKeteranganKeluar.setText("");
        isiComboBarang();
        isiComboCustomer();
    }
    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JComboBox<String> cboBarangKeluar;
    private javax.swing.JComboBox<String> cboCustomer;
    private com.toedter.calendar.JDateChooser dateKeluar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelBarang;
    private javax.swing.JLabel labelCustomer;
    private javax.swing.JLabel labelHarga;
    private javax.swing.JLabel labelIdKeluar;
    private javax.swing.JLabel labelKeluar;
    private javax.swing.JLabel labelKeterangan;
    private javax.swing.JLabel labelQTY;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel panelFooter;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JTable tabelBarangKeluar;
    private javax.swing.JTextField txtHargaSatuanKeluar;
    private javax.swing.JTextField txtIdKeluar;
    private javax.swing.JTextField txtKeteranganKeluar;
    private javax.swing.JTextField txtQTYKeluar;
    // End of variables declaration//GEN-END:variables
}
